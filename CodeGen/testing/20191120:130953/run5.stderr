assembly_gen.c: In function ‘void assembly_code_generator(LLVMValueRef, std::map<LLVMOpaqueValue*, int>&, std::map<LLVMOpaqueValue*, int>&, std::map<LLVMOpaqueBasicBlock*, char*>&, int)’:
assembly_gen.c:288:18: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  288 |      operation = "cmp";
      |                  ^~~~~
assembly_gen.c:291:18: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  291 |      operation = "addl";
      |                  ^~~~~~
assembly_gen.c:294:18: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  294 |      operation = "subl";
      |                  ^~~~~~
assembly_gen.c:297:18: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  297 |      operation = "imull";
      |                  ^~~~~~~
  %3 = load i32, i32* %2, align 4  %4 = sub nsw i32 %3, 5  %5 = load i32, i32* %2, align 4  %3 = load i32, i32* %2, align 4  %4 = sub nsw i32 %3, 5  %5 = load i32, i32* %2, align 4
Instruction examined:   %2 = alloca i32, align 4

Instruction examined:   store i32 %0, i32* %2, align 4
A store instruction: storing argument!

Instruction examined:   %3 = load i32, i32* %2, align 4
offset of instruction: 8

Instruction examined:   %4 = sub nsw i32 %3, 5

Instruction examined:   store i32 %4, i32* %2, align 4
A store instruction:  moving to location: 8

Instruction examined:   %5 = load i32, i32* %2, align 4
offset of instruction: 8

Instruction examined:   ret i32 %5
i32 %0  %2 = alloca i32, align 4  %3 = load i32, i32* %2, align 4  %4 = sub nsw i32 %3, 5  %5 = load i32, i32* %2, align 4